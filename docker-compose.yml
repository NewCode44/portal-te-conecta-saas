services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: tu_portal_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  # Template Service
  template-service:
    build:
      context: .
      dockerfile: template-service/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  # Router Service
  router-service:
    build:
      context: .
      dockerfile: router-service/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  # Service-specific microservices
  wipo-service:
    build:
      context: .
      dockerfile: wipo-service/Dockerfile
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  publifi-service:
    build:
      context: .
      dockerfile: publifi-service/Dockerfile
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  leer-te-conecta-service:
    build:
      context: .
      dockerfile: leer-te-conecta-service/Dockerfile
    ports:
      - "3012:3012"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  wihot-service:
    build:
      context: .
      dockerfile: wihot-service/Dockerfile
    ports:
      - "3013:3013"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  portexa-service:
    build:
      context: .
      dockerfile: portexa-service/Dockerfile
    ports:
      - "3014:3014"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  entrenatech-service:
    build:
      context: .
      dockerfile: entrenatech-service/Dockerfile
    ports:
      - "3015:3015"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tu_portal_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  # Frontend Applications
  admin-dashboard:
    build:
      context: .
      dockerfile: admin-dashboard/Dockerfile
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  portal-editor:
    build:
      context: .
      dockerfile: portal-editor/Dockerfile
    ports:
      - "4201:4201"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api-gateway:3000
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres_data:
  redis_data: